###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.42.1.142 for STM8               01/Jul/2016  17:30:48 #
# Copyright 2010-2013 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  E:\hwpro-2016\20160627_L\stm8l15x_lib\src\stm8l15x_irtim #
#                    .c                                                       #
#    Command line =  E:\hwpro-2016\20160627_L\stm8l15x_lib\src\stm8l15x_irtim #
#                    .c -e -Ol --no_cse --no_unroll --no_inline               #
#                    --no_code_motion --no_tbaa --no_cross_call --debug       #
#                    --code_model medium --data_model medium -o               #
#                    E:\hwpro-2016\20160627_L\iar\Debug\Obj\ --dlib_config    #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.5\stm8\LIB\dlstm8mmn.h" -D STM8L15X_MD -lC             #
#                    E:\hwpro-2016\20160627_L\iar\Debug\List\ -I              #
#                    E:\hwpro-2016\20160627_L\iar\..\stm8l15x_lib\inc\ -I     #
#                    E:\hwpro-2016\20160627_L\iar\..\user\inc\ -I             #
#                    E:\hwpro-2016\20160627_L\iar\..\utils\xprintf\ -I        #
#                    E:\hwpro-2016\20160627_L\iar\..\drivers\ -I              #
#                    E:\hwpro-2016\20160627_L\iar\..\utils\ -I                #
#                    E:\hwpro-2016\20160627_L\iar\..\app\ --vregs 16          #
#    List file    =  E:\hwpro-2016\20160627_L\iar\Debug\List\stm8l15x_irtim.l #
#                    st                                                       #
#    Object file  =  E:\hwpro-2016\20160627_L\iar\Debug\Obj\stm8l15x_irtim.o  #
#                                                                             #
#                                                                             #
###############################################################################

E:\hwpro-2016\20160627_L\stm8l15x_lib\src\stm8l15x_irtim.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm8l15x_irtim.c
      4            * @author  MCD Application Team
      5            * @version V1.6.1
      6            * @date    30-September-2014
      7            * @brief   This file provides firmware functions to configure the IRTIM peripheral.
      8            *
      9            *  @verbatim
     10            *  
     11            *          ===================================================================
     12            *                                 How to use this driver
     13            *          ===================================================================
     14            *          This driver provides functions to:
     15            *             1. Enable the IRTIM peripheral
     16            *             2. Enable the high sink mode on the IRTIM pin 
     17            *               
     18            *  @endverbatim
     19            *    
     20            ******************************************************************************
     21            * @attention
     22            *
     23            * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
     24            *
     25            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     26            * You may not use this file except in compliance with the License.
     27            * You may obtain a copy of the License at:
     28            *
     29            *        http://www.st.com/software_license_agreement_liberty_v2
     30            *
     31            * Unless required by applicable law or agreed to in writing, software 
     32            * distributed under the License is distributed on an "AS IS" BASIS, 
     33            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     34            * See the License for the specific language governing permissions and
     35            * limitations under the License.
     36            *
     37            ******************************************************************************
     38            */
     39          
     40          
     41          /* Includes ------------------------------------------------------------------*/
     42          #include "stm8l15x_irtim.h"
     43          
     44          /** @addtogroup STM8L15x_StdPeriph_Driver
     45            * @{
     46            */
     47            
     48          /** @defgroup IRTIM 
     49            * @brief IRTIM driver modules
     50            * @{
     51            */
     52             
     53          /* Private typedef -----------------------------------------------------------*/
     54          /* Private define ------------------------------------------------------------*/
     55          /* Private macro -------------------------------------------------------------*/
     56          /* Private variables ---------------------------------------------------------*/
     57          /* Private function prototypes -----------------------------------------------*/
     58          
     59          /** @defgroup IRTIM_Private_Functions
     60            * @{
     61            */
     62          
     63          /** @defgroup IRTIM_Group1 IRTIM configuration functions
     64           *  @brief   IRTIM configuration functions 
     65           *
     66          @verbatim   
     67           ===============================================================================
     68                                 IRTIM configuration functions
     69           ===============================================================================  
     70            
     71                 ===================================================================      
     72                                 IRTIM Driver: how to use it
     73                 =================================================================== 
     74                 To generate the infrared remote control signal, perform the following steps:
     75                    1. Use TIM2 channel 1 to generate the high frequency carrier signal
     76                       by calling TIM2_OC1Init()
     77                    2. Use TIM3 channel 1 to generate the modulation envelope by
     78                       calling TIM3_OC1Init()
     79                    3. Enable the IRTIM peripheral using IRTIM_Cmd()
     80          
     81                    Note1: When IRTIM peripheral is enabled, TIM2 channel 1 and TIM3 channel 1
     82                           become inactive (no signal on output) and can be used as GPIO.
     83                           
     84                    Note2: The high sink LED driver capability (only available on the IRTIM pin)
     85                           can be activated using IRTIM_HighSinkODCmd() to sink the high 
     86                           current needed to directly control an infrared LED
     87          
     88          @endverbatim
     89            * @{
     90            */
     91          
     92          /**
     93            * @brief  Deinitializes the IRTIM peripheral registers to their default reset values.
     94            * @param  None
     95            * @retval None
     96            */

   \                                 In section .far_func.text, align 1
     97          void IRTIM_DeInit(void)
     98          {
     99            IRTIM->CR = IRTIM_CR_RESET_VALUE;
   \                     IRTIM_DeInit:
   \   000000 35 00 52FF   MOV       L:0x52ff, #0x0
    100          }
   \   000004 87           RETF
    101          
    102          /**
    103            * @brief  Enables or disables the IRTIM peripheral.
    104            * @param  NewState : The new state of the IRTIM peripheral.
    105              *         This parameter can be: ENABLE or DISABLE.
    106            * @retval None
    107            */

   \                                 In section .far_func.text, align 1
    108          void IRTIM_Cmd(FunctionalState NewState)
    109          {
    110            /* Check the parameters */
    111            assert_param(IS_FUNCTIONAL_STATE(NewState));
    112          
    113            /* set or Reset the EN Bit */
    114            if (NewState ==   DISABLE)
   \                     IRTIM_Cmd:
   \   000000 4D           TNZ       A
   \   000001 26 05        JRNE      L:??IRTIM_Cmd_0
    115            {
    116              IRTIM->CR &= (uint8_t)(~IRTIM_CR_EN) ;
   \   000003 7211 52FF    BRES      L:0x52ff, #0x0
   \   000007 87           RETF
    117            }
    118            else
    119            {
    120              IRTIM->CR |= IRTIM_CR_EN ;
   \                     ??IRTIM_Cmd_0:
   \   000008 7210 52FF    BSET      L:0x52ff, #0x0
    121            }
    122          }
   \   00000C 87           RETF
    123          
    124          /**
    125            * @brief  Enables or disables the High sink open drain buffer of the IRTIM peripheral.
    126            * @param  NewState : The new state of the High sink open drain buffer.
    127              *         This parameter can be: ENABLE or DISABLE.
    128            * @retval None
    129            */

   \                                 In section .far_func.text, align 1
    130          void IRTIM_HighSinkODCmd(FunctionalState NewState)
    131          {
    132            /* Check the parameters */
    133            assert_param(IS_FUNCTIONAL_STATE(NewState));
    134          
    135            /* set or Reset the EN Bit */
    136            if (NewState == DISABLE)
   \                     IRTIM_HighSinkODCmd:
   \   000000 4D           TNZ       A
   \   000001 26 05        JRNE      L:??IRTIM_HighSinkODCmd_0
    137            {
    138              IRTIM->CR &= (uint8_t)(~IRTIM_CR_HSEN) ;
   \   000003 7213 52FF    BRES      L:0x52ff, #0x1
   \   000007 87           RETF
    139            }
    140            else
    141            {
    142              IRTIM->CR |= IRTIM_CR_HSEN ;
   \                     ??IRTIM_HighSinkODCmd_0:
   \   000008 7212 52FF    BSET      L:0x52ff, #0x1
    143            }
    144          }
   \   00000C 87           RETF
    145          
    146          /**
    147            * @}
    148            */
    149          
    150          /** @defgroup IRTIM_Group2 IRITM status management functions
    151           *  @brief    IRITM status management functions 
    152           *
    153          @verbatim   
    154           ===============================================================================
    155                               IRITM status management functions
    156           ===============================================================================  
    157          
    158          @endverbatim
    159            * @{
    160            */
    161          
    162          /**
    163            * @brief  Checks whether the IRTIM device is enabled or not.
    164            * @param  None
    165            * @retval state of the IRTIM device.
    166            */
    167          

   \                                 In section .far_func.text, align 1
    168          FunctionalState IRTIM_GetStatus(void)
    169          {
    170            return ((FunctionalState) (IRTIM->CR & IRTIM_CR_EN));
   \                     IRTIM_GetStatus:
   \   000000 C6 52FF      LD        A, L:0x52ff
   \   000003 A4 01        AND       A, #0x1
   \   000005 87           RETF
    171          }
    172          
    173          /**
    174            * @brief  Checks whether the IRTIM High Sink Open Drain buffer is Enabled or not.
    175            * @param  None
    176            * @retval state of High Sink Open Drain buffer.
    177            */

   \                                 In section .far_func.text, align 1
    178          FunctionalState IRTIM_GetHighSinkODStatus(void)
    179          {
    180            return ((FunctionalState)(IRTIM->CR & IRTIM_CR_HSEN));
   \                     IRTIM_GetHighSinkODStatus:
   \   000000 C6 52FF      LD        A, L:0x52ff
   \   000003 A4 02        AND       A, #0x2
   \   000005 87           RETF
    181          }
    182          
    183          /**
    184            * @}
    185            */ 
    186          
    187          /**
    188            * @}
    189            */ 
    190            
    191          /**
    192            * @}
    193            */
    194          
    195          /**
    196            * @}
    197            */
    198            
    199          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Section sizes:

   Bytes  Function/Label
   -----  --------------
      13  IRTIM_Cmd
       5  IRTIM_DeInit
       6  IRTIM_GetHighSinkODStatus
       6  IRTIM_GetStatus
      13  IRTIM_HighSinkODCmd

 
 43 bytes in section .far_func.text
 
 43 bytes of CODE memory

Errors: none
Warnings: none
