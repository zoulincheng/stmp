###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.42.1.142 for STM8               01/Jul/2016  17:30:45 #
# Copyright 2010-2013 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  E:\hwpro-2016\20160627_L\drivers\debugUart.c             #
#    Command line =  E:\hwpro-2016\20160627_L\drivers\debugUart.c -e -Ol      #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_cross_call --debug --code_model medium    #
#                    --data_model medium -o E:\hwpro-2016\20160627_L\iar\Debu #
#                    g\Obj\ --dlib_config "C:\Program Files (x86)\IAR         #
#                    Systems\Embedded Workbench 6.5\stm8\LIB\dlstm8mmn.h" -D  #
#                    STM8L15X_MD -lC E:\hwpro-2016\20160627_L\iar\Debug\List\ #
#                     -I E:\hwpro-2016\20160627_L\iar\..\stm8l15x_lib\inc\    #
#                    -I E:\hwpro-2016\20160627_L\iar\..\user\inc\ -I          #
#                    E:\hwpro-2016\20160627_L\iar\..\utils\xprintf\ -I        #
#                    E:\hwpro-2016\20160627_L\iar\..\drivers\ -I              #
#                    E:\hwpro-2016\20160627_L\iar\..\utils\ -I                #
#                    E:\hwpro-2016\20160627_L\iar\..\app\ --vregs 16          #
#    List file    =  E:\hwpro-2016\20160627_L\iar\Debug\List\debugUart.lst    #
#    Object file  =  E:\hwpro-2016\20160627_L\iar\Debug\Obj\debugUart.o       #
#                                                                             #
#                                                                             #
###############################################################################

E:\hwpro-2016\20160627_L\drivers\debugUart.c
      1          #include "stm8l15x.h"
      2          #include "boardiodef.h"
      3          #include "debugUart.h"
      4          

   \                                 In section .far_func.text, align 1
      5          void debugUartInit(void)
      6          {
      7           	GPIO_Init(USART1_TX_PORT, USART1_TX_PIN, GPIO_Mode_Out_PP_High_Fast);
   \                     debugUartInit:
   \   000000 35 F0 ....   MOV       S:?b0, #0xf0
   \   000004 A6 04        LD        A, #0x4
   \   000006 AE 5000      LDW       X, #0x5000
   \   000009 8D ......    CALLF     GPIO_Init
      8           	GPIO_Init(USART1_RX_PORT, USART1_RX_PIN, GPIO_Mode_In_PU_No_IT);
   \   00000D 35 40 ....   MOV       S:?b0, #0x40
   \   000011 A6 08        LD        A, #0x8
   \   000013 AE 5000      LDW       X, #0x5000
   \   000016 8D ......    CALLF     GPIO_Init
      9          	SYSCFG_REMAPDeInit();                                                         //重映射初始化
   \   00001A 8D ......    CALLF     SYSCFG_REMAPDeInit
     10              SYSCFG_REMAPPinConfig(REMAP_Pin_USART1TxRxPortA, ENABLE);                     //将串口1的TX、RX分别映射到PA2、PA3
   \   00001E A6 01        LD        A, #0x1
   \   000020 AE 011C      LDW       X, #0x11c
   \   000023 8D ......    CALLF     SYSCFG_REMAPPinConfig
     11              CLK_PeripheralClockConfig(CLK_Peripheral_USART1, ENABLE);                     //开串口时钟
   \   000027 35 01 ....   MOV       S:?b0, #0x1
   \   00002B A6 05        LD        A, #0x5
   \   00002D 8D ......    CALLF     CLK_PeripheralClockConfig
     12              USART_DeInit(USART1);                                                         //串口初始化
   \   000031 AE 5230      LDW       X, #0x5230
   \   000034 8D ......    CALLF     USART_DeInit
     13          	//init debug usart1 pin
     14          	/* USART configured as follow:
     15          	- BaudRate = 115200 baud  
     16          	- Word Length = 8 Bits
     17          	- One Stop Bit
     18          	- No parity
     19          	- Receive and transmit enabled
     20          	- USART Clock disabled
     21          	*/
     22          
     23          	/* USART configuration */
     24          	USART_Init(USART1, 
     25          			  (uint32_t)115200,
     26          			  USART_WordLength_8b,
     27          			  USART_StopBits_1,
     28          			  USART_Parity_No,
     29          			  (USART_Mode_TypeDef)(USART_Mode_Tx | USART_Mode_Rx));
   \   000038 35 0C ....   MOV       S:?b6, #0xc
   \   00003C 3F ..        CLR       S:?b5
   \   00003E 3F ..        CLR       S:?b4
   \   000040 4F           CLR       A
   \   000041 AE C200      LDW       X, #0xc200
   \   000044 BF ..        LDW       S:?w1, X
   \   000046 5F           CLRW      X
   \   000047 5C           INCW      X
   \   000048 BF ..        LDW       S:?w0, X
   \   00004A AE 5230      LDW       X, #0x5230
   \   00004D 8D ......    CALLF     USART_Init
     30          
     31          
     32          	/* Enable the USART Receive interrupt: this interrupt is generated when the USART
     33          	receive data register is not empty */
     34          	//USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
     35          	
     36          	/* Enable the USART Transmit complete interrupt: this interrupt is generated when the USART
     37          	transmit Shift Register is empty */
     38          	//USART_ITConfig(USART1, USART_IT_TC, ENABLE);
     39          
     40          	/* Enable USART */
     41          	USART_Cmd(USART1, ENABLE);
   \   000051 A6 01        LD        A, #0x1
   \   000053 AE 5230      LDW       X, #0x5230
   \   000056 AC ......    JPF       USART_Cmd
     42          }
     43          
     44          

   \                                 In section .far_func.text, align 1
     45          int dbgSendChar(int ch) 
     46          {
   \                     dbgSendChar:
   \   000000 8D ......    CALLF     L:?push_w4
   \   000004 BF ..        LDW       S:?w4, X
     47          	//while (!(USART1->SR & USART_FLAG_TXE)); // USART1 可换成你程序中通信的串口
     48          	//while (USART_GetFlagStatus(EVAL_COM1, USART_FLAG_TC) == RESET);
     49          	/* Transmit Data */
     50          	USART1->DR = (uint8_t)ch;
   \   000006 B6 ..        LD        A, S:?b9
   \   000008 C7 5231      LD        L:0x5231, A
     51          	while (USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   \                     ??dbgSendChar_0:
   \   00000B 90AE 0080    LDW       Y, #0x80
   \   00000F AE 5230      LDW       X, #0x5230
   \   000012 8D ......    CALLF     USART_GetFlagStatus
   \   000016 A1 00        CP        A, #0x0
   \   000018 27 F1        JREQ      L:??dbgSendChar_0
     52          	return (ch);
   \   00001A BE ..        LDW       X, S:?w4
   \   00001C AC ......    JPF       L:?epilogue_w4
     53          }
     54          
     55          

   Section sizes:

   Bytes  Function/Label
   -----  --------------
      32  dbgSendChar
      90  debugUartInit

 
 122 bytes in section .far_func.text
 
 122 bytes of CODE memory

Errors: none
Warnings: none
